# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hLj9R6keJJomFrZ_aACQLfxdhnPMMm6N
"""

#Task 2
#Q1
x = int(input())
y = int(input())
z = int(input())
n = int(input())

l = [[i, j, k] for i in range(x + 1) for j in range(y + 1) for k in range(z + 1)]
ll = []

for i in range(len(l)):
    if sum(l[i]) != n:
        ll.append(l[i])

print(ll)

#Task 2
#Q2
lst = []
n = int(input("Enter the number of scores:"))
for i in range(n):
  sc = int(input())
  lst.append(sc)
lst.sort()
new = lst[0:-1]
runner_up = max(new)
print("Score of the runner up is:", runner_up)

#Task 2
#Q3
n = int(input("Enter the number of students:"))
record = []
for i in range(n):
  score = []
  name = str(input())
  mark = int(input())
  score.append(name)
  score.append(mark)
  record.append(score)
print(record) 
record.remove(min(record))
sec_low = record[0]
lowest = sec_low[1]
for i in record:
  if i[1]== lowest:
    print(i[0])

#Task 2
#Q4
n = int(input("Enter the number of students:"))
student_marks = {}
for i in range(n):
    lis = list(map(str, input().split()))
    name = lis[0]
    scores = list(map(float, lis[1:]))
    student_marks[name] = scores
query = input()
print(sum(student_marks[query])/3)

#Task 2
#Q5
lst = []
n = int(input("Enter num:"))
for i in range(n):
  cmd = str(input("Enter command:"))
  if cmd=="insert":
      e = "hi"
      lst.insert(i,e)
  elif cmd=="remove":
      lst.remove(e)
  elif cmd=="append":
      x = "bye"
      lst.append(x)
  elif cmd=="sort":
      lst.sort()
  elif cmd=="pop":
      lst.pop()
  elif cmd=="reverse":
      lst.reverse()
  elif cmd=="print":
      print(lst)

#Task 2
#Q6
num = int(input("Enter n value:"))
t = ()
for i in range(n):
  tup = tuple(map(int, input().split()))
  lst = list(t)
  lst.append(tup)
  t = tuple(lst)
h = hash(t)
print("Hash is:",h)

#Task2
#Q7
n = int(input())
arr = list(map(int, input().split()))
s = set(arr)
print(sum(s)/len(s))

#Task2
#Q8
nm = input().split()
n = list(map(int, input().split()))
a = set(map(int, input().split()))
b = set(map(int, input().split()))
happiness = 0
for i in a:
    if i in n:
        happiness += 1
for i in b:
    if i in n:
        happiness -= 1
print(happiness)

#Task2
#Q9
nM = int(input())
m = set(map(int, input().split()))
nN = int(input())
n = set(map(int, input().split()))
d = m.symmetric_difference(n)
d = list(d)
d.sort()
for i in d:
    print(i)

#Task2
#Q10
n = int(input())
s = set()
for i in range(n):
    country = input()
    s.add(country)
    
print(len(s))

#Task2
#Q11
n = int(input())
s = set(map(int, input().split()))
t = int(input())
for i in range(t):
    p=input().split()
    if p[0]=="pop" :
        s.pop()
    elif p[0]=="remove" :
        s.remove(int(p[1]))
    elif p[0]=="discard" :
        s.discard(int(p[1]))
print(sum(s))

#Task2
#Q12
nA = int(input())
a = set(input().split())
nB = int(input())
b = set(input().split())
print(len(a.union(b)))

#Task2
#Q13
nA = int(input())
a = set(input().split())
nB = int(input())
b = set(input().split())
print(len(a&b))

#Task2
#Q14
nA = int(input())
a = set(input().split())
nB = int(input())
b = set(input().split())
print(len(a-b))

#Task2
#Q15
nA = int(input())
a = set(input().split())
nB = int(input())
b = set(input().split())
print(len(a^b))

#Task2
#Q16
nA = int(input())
a = set(map(int, input().split()))
n = int(input())
for i in range(n):
    on = list(map(str, input().split()))
    o = on[0]
    b = set(map(int, input().split()))
    if o == 'update':
        a.update(b)
    elif o == 'intersection_update':
        a.intersection_update(b)
    elif o == 'difference_update':
        a.difference_update(b)
    else:
        a.symmetric_difference_update(b)
print(sum(a))

#Task2
#Q17
k = int(input())
l = list(map(int, input().split()))
cap = 0
a = sum(set(l))*k - sum(l)
print(int(a/(k-1)))

#Task2
#Q18
t = int(input())
for i in range(t):
    nA = int(input())
    a = set(input().split())
    nB = int(input())
    b = set(input().split())
    if a.issubset(b):
        print('True')
    else:
        print('False')

#Task2
#Q19
a = set(input().split())
n = int(input())
count = 0
for i in range(n):
    b = set(input().split())
    if a.issuperset(b):
        count += 1
        
if count == n:
    print('True')
else:
    print('False')