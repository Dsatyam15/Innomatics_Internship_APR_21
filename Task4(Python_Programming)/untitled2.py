# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t46OoI_tlsfrdg6GF6u_Ckv6L1zSOK1o
"""

#Task4
#Q1
stg = str(input())
print(stg.swapcase())

#Task4
#Q2
bolo = str(input())
bolo = bolo.split(" ")
bolo = "-".join(bolo)
print(bolo)

#Task4
#Q3
first = str(input("Enter 1st name:"))
last = str(input("Enter last name:"))
fname = first + " " + last
print("Hello",fname,"! You just delved into python")

#Task4
#Q4
gstr = str(input("Enter the string:"))
ind = int(input("Enter index to change:"))
char = str(input("Enter character to insert:"))
lst = list(gstr)
lst[ind] = char
string = ''.join(lst)
print(string)
str1 = gstr[:ind] + char +gstr[ind+1:]
print(str1)

#Task4
#Q5
stg =  str(input("Enter the main string:"))
sstg = str(input("Enter the substring:"))
c = stg.count(sstg)
print(c)

#Task4
#Q6
do = str(input("Enter the string:"))
print(any(i.isalnum() for i in do))
print(any(i.isalpha() for i in do))
print(any(i.isdigit() for i in do))
print(any(i.islower() for i in do))
print(any(i.isupper() for i in do))

#Task4
#Q7
#Replace all __ with rjust, ljust or center. 

thickness = int(input()) #This must be an odd number
c = 'H'

#Top Cone
for i in range(thickness):
    print((c*i).rjust(thickness-1)+c+(c*i).ljust(thickness-1))

#Top Pillars
for i in range(thickness+1):
    print((c*thickness).center(thickness*2)+(c*thickness).center(thickness*6))

#Middle Belt
for i in range((thickness+1)//2):
    print((c*thickness*5).center(thickness*6))    

#Bottom Pillars
for i in range(thickness+1):
    print((c*thickness).center(thickness*2)+(c*thickness).center(thickness*6))    

#Bottom Cone
for i in range(thickness):
    print(((c*(thickness-i-1)).rjust(thickness)+c+(c*(thickness-i-1)).ljust(thickness)).rjust(thickness*6))

#Task4
#Q8
import textwrap
string = str(input("Enter string to wrap:"))
max_width = int(input("Enter the width:"))
new = textwrap.fill(string, width = max_width)
print(new)

#Task4
#Q9
N, M = map(int, input().split())
for i in range(1, N, 2):
    print(str('.|.' * i).center(M, '-'))
print('WELCOME'.center(M, '-'))
for i in range(N-2, -1, -2):
    print(str('.|.' * i).center(M, '-'))

#Task4
#Q10
dec = int(input("Enter the value of n:"))
for i in range(dec):
  print("{0:d}".format(int(i)))
  print('{0:x}'.format(int(i)))
  print('{0:o}'.format(int(i)))
  print('{0:b}'.format(int(i)))

#Task4
#Q11
def print_rangoli(n):
    alpha = "abcdefghijklmnopqrstuvwxyz"
    py = [alpha[i] for i in range(n)]
    items = list(range(n))
    items = items[:-1]+items[::-1]
    for i in items:
        temp = py[-(i+1):]
        row = temp[::-1]+temp[1:]
        print("-".join(row).center(n*4-3, "-"))


n = int(input("Enter the size:"))
print_rangoli(n)

#Task4
#Q12
name = str(input("Enter the full name:"))
nl = name.split()
for i in nl:
  lst = []
  c = i.capitalize()
  lst.append(c)
  h = ""
  print(h.join(map(str, lst)))

#Task4
#Q13
vowels = ['A', 'E', 'I', 'O', 'U']

def minion_game(string):
    Kevin = 0
    Stuart = 0
    word = list(string)
    x = len(word)
    vowels = ['A','E','I','O','U']
    for inx, w in enumerate(word):
        if w in vowels:
            Kevin = Kevin + x
        else:
            Stuart = Stuart + x
        x = x - 1
    if Stuart > Kevin:
        print ('Stuart', Stuart)
    elif Kevin > Stuart:
        print ('Kevin', Kevin)
    else:
        print ('Draw')
string = str(input("Enter the string:"))
minion_game(string)

#Task
#Q14
def merge_the_tools(string, k):
    # your code goes here

    temp = []
    len_temp = 0
    for item in string:
        len_temp += 1
        if item not in temp:
            temp.append(item)
        if len_temp == k:
            print (''.join(temp))
            temp = []
            len_temp = 0

string, k = input(), int(input())
merge_the_tools(string, k)

